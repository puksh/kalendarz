import{b,h as w,d as g,i as L,c as M,l as E,g as F,e as A,s as P,v as p,a as v}from"./scrollUtils-CEn1ByBB.js";import{N as I,S as N,a as m,M as d,V as O,P as k,b as H,_ as x}from"./utils-oyCVUgbq.js";import{i as S,g as V}from"./index-DAlc29Zm.js";import{c as r,o as n,d as f,F as C,a as y,n as _,t as D,j as Y,z as U,w as B}from"./vue-vendor-DhtqVHvN.js";const q={name:"SpreadsheetView",emits:["update-editing-mode","has-changes","month-days-updated"],props:{isEditingMode:{type:Boolean,required:!0},selectedMonth:{type:Number,required:!0},selectedYear:{type:Number,required:!0},people:{type:Array,required:!0}},components:{NotificationMessage:I},data(){return{editedShifts:{},monthDays:[],localData:{},daysOfWeek:g,madeChanges:!1,scrollContainer:null,isFirstColumnLocked:!1,importedCells:new Set,MESSAGES:d,SHIFT_OPTIONS:H}},computed:{daysInMonth(){return this.monthDays.map(e=>e.date.getDate())},orderedPeople(){return this.people.filter(e=>k.includes(e.name)).sort((e,t)=>k.indexOf(e.name)-k.indexOf(t.name))},lockButtonTooltip(){return this.isFirstColumnLocked?d.UNLOCK_WIDTH:d.LOCK_WIDTH},editCellAriaLabel(){return this.isEditingMode?d.CLICK_TO_EDIT:""},editCellTitle(){return this.isEditingMode?d.CLICK_TO_EDIT:""}},watch:{selectedMonth(){this.generateMonthDays(),this.scrollToToday()},selectedYear(){this.generateMonthDays(),this.scrollToToday()}},methods:{isEditing(e,t){return this.editedShifts.hasOwnProperty(`${e}-${t}`)},getShiftForPersonAndDay(e,t){const i=this.monthDays.find(o=>o.date.getDate()===t)?.date;return i?V(e,i," "):null},editCell(e,t){if(this.isEditingMode){const i=`${e}-${t}`,o=this.getShiftForPersonAndDay(e,t)||"";this.editedShifts[i]=o}},validateShiftValue(e){const t=e?.trim().toUpperCase()||"";return O.includes(t)?t:null},clearPersonFromAllShifts(e,t){N.forEach(i=>{e[i]===t&&(e[i]=null,e[i+"Name"]=d.NOT_ASSIGNED,e[i+"UserChanged"]=!0)})},assignPersonToShift(e,t,i){const o=this.people.find(c=>c.id===t);return e[i]?!1:(e[i]=t,e[i+"Name"]=o.name,e[i+"UserChanged"]=!0,!0)},assignDayShift(e,t){return this.assignPersonToShift(e,t,"dayShift1")||this.assignPersonToShift(e,t,"dayShift2")?!0:(m(d.MAX_DAY_PEOPLE,"red"),!1)},assignNightShift(e,t){return this.assignPersonToShift(e,t,"nightShift1")||this.assignPersonToShift(e,t,"nightShift2")?!0:(m(d.MAX_NIGHT_PEOPLE,"red"),!1)},saveShiftData(e,t){const i={dayShift1:e.dayShift1,dayShift2:e.dayShift2,nightShift1:e.nightShift1,nightShift2:e.nightShift2,dayShift1Name:e.dayShift1Name,dayShift2Name:e.dayShift2Name,nightShift1Name:e.nightShift1Name,nightShift2Name:e.nightShift2Name};this.localData[t]=i,sessionStorage.setItem(t,JSON.stringify(i)),this.madeChanges=!0,this.$emit("has-changes",this.madeChanges)},saveShift(e,t){const i=`${e}-${t}`,o=this.validateShiftValue(this.editedShifts[i]),c=this.getDateString(t);if(!c)return;const s=this.findDayByDate(c);if(!s)return;if(N.filter(u=>s[u]===e).forEach(u=>{A(s,u)}),o===""){P(s),delete this.editedShifts[i];return}const l=this.people.find(u=>u.id===e);if(!l)return;const h=(u,T)=>!s[u]&&p(s,u,l,this.people)?(v(s,u,l),!0):!s[T]&&p(s,T,l,this.people)?(v(s,T,l),!0):!1;if(o.includes("D")&&!h("dayShift1","dayShift2")){m(d.MAX_DAY_PEOPLE,"red"),delete this.editedShifts[i];return}if(o.includes("N")&&!h("nightShift1","nightShift2")){m(d.MAX_NIGHT_PEOPLE,"red"),delete this.editedShifts[i];return}P(s),delete this.editedShifts[i],this.madeChanges=!0,this.$emit("has-changes",!0)},generateMonthDays(){this.resetUserChanges(),this.monthDays=F(this.selectedYear,this.selectedMonth),E(this.selectedYear,this.selectedMonth,this.monthDays,this.people),this.$emit("month-days-updated",this.monthDays)},updateChanges(e){this.madeChanges=e,this.$emit("has-changes",this.madeChanges)},loadFromSessionStorage(){E(this.selectedYear,this.selectedMonth,this.monthDays,this.people)},resetUserChanges(){M(),this.localData={},this.editedShifts={},this.madeChanges=!1,this.$emit("has-changes",this.madeChanges)},clearUserChangesFromStorage(){M()},isToday(e){return L(e)},isImportedCell(e,t){return this.importedCells.has(`${e}-${t}`)},toggleColumnsLocked(){this.isFirstColumnLocked=!this.isFirstColumnLocked,this.$nextTick(()=>{document.querySelectorAll(".calendar-table th:first-child, .calendar-table td:first-child").forEach(t=>{this.isFirstColumnLocked?t.classList.add("column-locked"):t.classList.remove("column-locked")})})},isHoliday(e){return S(e)},getHeaderCellClasses(e){const t=new Date(this.selectedYear,this.selectedMonth,e);return{"nd-color":g[t.getDay()]==="Nd","sob-color":g[t.getDay()]==="Sob","holiday-color":S(t).isHoliday,"today-column":this.isToday(t)}},getPersonCellClasses(e){return{ratownik:e.ratownik,pielegniarka:!e.ratownik}},getDataCellClasses(e){const t=new Date(this.selectedYear,this.selectedMonth,e);return{"nd-color":g[t.getDay()]==="Nd","sob-color":g[t.getDay()]==="Sob","holiday-color":S(t).isHoliday,today:this.isToday(t)}},getHolidayTooltip(e){const t=new Date(this.selectedYear,this.selectedMonth,e);return S(t).name||""},findDayByDate(e){return this.monthDays.find(t=>t.date.toDateString()===e)},getDateString(e){return this.monthDays.find(t=>t.date.getDate()===e)?.date.toDateString()},handleScroll(e){w(e,this.scrollContainer)},findTodayIndex(){const e=new Date;return this.daysInMonth.findIndex(t=>t===e.getDate()&&this.selectedMonth===e.getMonth()&&this.selectedYear===e.getFullYear())},scrollToToday(){this.$nextTick(()=>{const e=this.findTodayIndex();b(this.scrollContainer,this.selectedMonth,this.selectedYear,e)})}},mounted(){this.resetUserChanges(),this.generateMonthDays(),this.scrollContainer=this.$refs.scrollContainer,this.scrollContainer&&(this.scrollContainer.style.scrollBehavior="smooth"),this.scrollToToday()}},z={class:"spreadsheet-view"},G={class:"calendar-table"},K=["title"],W={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",width:"24",height:"24",fill:"none",stroke:"white","stroke-width":"2"},X={key:0,d:"M12 3a4 4 0 0 0-4 4v4h8V7a4 4 0 0 0-4-4z"},R={key:1,d:"M8 11V7a4 4 0 0 1 8 0"},j=["title","aria-label"],J=["onClick","aria-label","title"],$=["onUpdate:modelValue","onChange"],Q=["value"];function Z(e,t,i,o,c,s){return n(),r("div",z,[f("div",{class:"scrollable-container",onWheel:t[1]||(t[1]=B((...a)=>s.handleScroll&&s.handleScroll(...a),["prevent"])),ref:"scrollContainer"},[f("table",G,[f("thead",null,[f("tr",null,[f("th",null,[f("button",{class:"lock-column-button",onClick:t[0]||(t[0]=(...a)=>s.toggleColumnsLocked&&s.toggleColumnsLocked(...a)),title:s.lockButtonTooltip},[(n(),r("svg",W,[t[2]||(t[2]=f("rect",{x:"7",y:"11",width:"10",height:"10",rx:"1"},null,-1)),c.isFirstColumnLocked?(n(),r("path",X)):(n(),r("path",R))]))],8,K)]),(n(!0),r(C,null,y(s.daysInMonth,a=>(n(),r("th",{key:a,class:_(s.getHeaderCellClasses(a)),title:s.getHolidayTooltip(a),"aria-label":s.getHolidayTooltip(a)},D(a),11,j))),128))])]),f("tbody",null,[(n(!0),r(C,null,y(s.orderedPeople,a=>(n(),r("tr",{key:a.id},[f("td",{class:_(s.getPersonCellClasses(a))},D(a.name),3),(n(!0),r(C,null,y(s.daysInMonth,l=>(n(),r("td",{key:l,class:_(["editable-cell",s.getDataCellClasses(l)]),onClick:h=>s.editCell(a.id,l),"aria-label":s.editCellAriaLabel,title:s.editCellTitle,role:"gridcell"},[!i.isEditingMode||!s.isEditing(a.id,l)?(n(),r("span",{key:0,class:_({"imported-cell":s.isImportedCell(a.id,l)})},D(s.getShiftForPersonAndDay(a.id,l)||""),3)):Y((n(),r("select",{key:1,"onUpdate:modelValue":h=>c.editedShifts[`${a.id}-${l}`]=h,onChange:h=>s.saveShift(a.id,l)},[(n(!0),r(C,null,y(c.SHIFT_OPTIONS,h=>(n(),r("option",{key:h.value,value:h.value},D(h.label),9,Q))),128))],40,$)),[[U,c.editedShifts[`${a.id}-${l}`]]])],10,J))),128))]))),128))])])],544)])}const ae=x(q,[["render",Z],["__scopeId","data-v-ad8b620b"]]);export{ae as default};
